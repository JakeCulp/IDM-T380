{"version":3,"sources":["lib.js","main.js"],"names":["uiButtons","myList","document","createElement","myPromise","Promise","button","listItem","innerHTML","appendChild","body","resolve","then","anchors","querySelectorAll","myFunction","event","console","log","preventDefault","anchor","addEventListener","handleFormSubmit","inputDate","getElementById","myDate","Date","value","group","getDate","getUTCMonth","getUTCDate","getUTCFullYear","groupEnd","feedbackDate","nextElementSibling","isNaN","focus","hidden","form","forms"],"mappings":";;AAAA;AACA,MAAAA,YAAA,CAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,UAAA,CAAA;AACA,MAAAC,SAAAC,SAAAC,aAAA,CAAA,IAAA,CAAA;;AAEA;;;;;;;;;;;AAYA,MAAAC,YAAA,IAAAC,OAAA,CAAA,mBAAA;AAAA;AAAA;AAAA;;AAAA;AACA,2BAAAL,SAAA,8HAAA;AAAA,YAAAM,MAAA;;AACA;AACA;AACA,YAAAC,WAAAL,SAAAC,aAAA,CAAA,IAAA,CAAA;AACAI,iBAAAC,SAAA,qBAAAF,MAAA;AACAL,eAAAQ,WAAA,CAAAF,QAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQAL,aAAAQ,IAAA,CAAAD,WAAA,CAAAR,MAAA;AACAU;;AAEA;AACA;AACA;AACA,GAdA,CAAA;;AAgBAP,YAAAQ,IAAA,CAAA,YAAA;AACA,QAAAC,UAAAX,SAAAY,gBAAA,CAAA,GAAA,CAAA;AACA,QAAAC,aAAA,SAAAA,UAAA,CAAAC,KAAA,EAAA;AACAC,cAAAC,GAAA,CAAA,KAAAV,SAAA;AACAQ,YAAAG,cAAA;AACA,KAHA;AAFA;AAAA;AAAA;;AAAA;AAMA,4BAAAN,OAAA,mIAAA;AAAA,YAAAO,MAAA;;AACAA,eAAAC,gBAAA,CAAA,OAAA,EAAAN,UAAA,EAAA,KAAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,GATA;AAUA;;AC1CA;AAAA,MAIAO,gBAJA,GAIA,SAAAA,gBAAA,CAAAN,KAAA,EAAA;AACA;AACAA,UAAAG,cAAA;;AAEA,QAAAI,YAAArB,SAAAsB,cAAA,CAAA,MAAA,CAAA;AACA,QAAAC,SAAA,IAAAC,IAAA,CAAAH,UAAAI,KAAA,CAAA;;AAEAV,YAAAC,GAAA,CAAA,gBAAA,EAAAF,KAAA;AACAC,YAAAW,KAAA,CAAA,2BAAA;AACAX,YAAAC,GAAA,cAAAO,MAAA;AACAR,YAAAC,GAAA,eAAAO,OAAAI,OAAA,EAAA;AACA;;;;;;;AAOAZ,YAAAC,GAAA,aAAAO,OAAAK,WAAA,EAAA;AACAb,YAAAC,GAAA,YAAAO,OAAAM,UAAA,EAAA;AACAd,YAAAC,GAAA,YAAAO,OAAAO,cAAA,EAAA;AACAf,YAAAgB,QAAA;;AAEA;AACA,QAAAC,eAAAX,UAAAY,kBAAA;AACA,QAAAC,MAAAX,MAAA,CAAA,EAAA;AACAF,gBAAAc,KAAA;AACAd,gBAAAI,KAAA,GAAA,EAAA;AACAO,mBAAAI,MAAA,GAAA,KAAA;AACA,KAJA,MAIA;AACAJ,mBAAAI,MAAA,GAAA,IAAA;AACA;;AAEA;AACA,GAtCA;;AACA;AACA,MAAAC,OAAArC,SAAAsC,KAAA,CAAA,QAAA,CAAA;;AAsCA,MAAAD,IAAA,EAAA;AACAA,SAAAlB,gBAAA,CAAA,QAAA,EAAAC,gBAAA,EAAA,KAAA;AACAiB,SAAAlB,gBAAA,CAAA,QAAA,EAAAC,gBAAA,EAAA,KAAA;AACA;AACA","file":"main.js","sourcesContent":["{\n  const uiButtons = ['Eagles', 'Flyers', 'Sixers', 'Phillies'];\n  const myList = document.createElement('ul');\n\n  /*\n  for (const button of uiButtons) {\n    // console.log(button);\n    console.log(`Current button: ${button}`);\n    const listItem = document.createElement('li');\n    listItem.innerHTML = `<a href=\"#\"> ${button} </a>`;\n    myList.appendChild(listItem);\n  }\n\n  document.body.appendChild(myList);\n\t*/\n\n  let myPromise = new Promise(resolve => {\n    for (const button of uiButtons) {\n      // console.log(button);\n      // console.log(`Current button: ${button}`);\n      const listItem = document.createElement('li');\n      listItem.innerHTML = `<a href=\"#\"> ${button} </a>`;\n      myList.appendChild(listItem);\n    }\n    document.body.appendChild(myList);\n    resolve();\n\n    // window.setTimeout(() => {\n    //   resolve();\n    // }, 3000);\n  });\n\n  myPromise.then(() => {\n    const anchors = document.querySelectorAll('a');\n    const myFunction = function(event) {\n      console.log(this.innerHTML);\n      event.preventDefault();\n    };\n    for (const anchor of anchors) {\n      anchor.addEventListener('click', myFunction, false);\n    }\n  });\n}\n","{\n  // const form = document.getElementById('myForm');\n  const form = document.forms['myForm'];\n\n  function handleFormSubmit(event) {\n    // Prevent the form submission from refreshing the page.\n    event.preventDefault();\n\n    const inputDate = document.getElementById('date');\n    const myDate = new Date(inputDate.value);\n\n    console.log('Form submitted', event);\n    console.group('Selected Date Information');\n    console.log(`myDate: ${myDate}`);\n    console.log(`getDate: ${myDate.getDate()}`);\n    /**\n     * Notice the day value is off by one.\n     * This occurs because we're taking a UTC date\n     * and converting it to our timezone which is 5\n     * hours behind. We need the date when not adjusting\n     * for timezone.\n     */\n    console.log(`Month: ${myDate.getUTCMonth()}`);\n    console.log(`Date: ${myDate.getUTCDate()}`);\n    console.log(`Year: ${myDate.getUTCFullYear()}`);\n    console.groupEnd();\n\n    // What happens when the input date is invalid?\n    const feedbackDate = inputDate.nextElementSibling;\n    if (isNaN(myDate)) {\n      inputDate.focus();\n      inputDate.value = '';\n      feedbackDate.hidden = false;\n    } else {\n      feedbackDate.hidden = true;\n    }\n\n    // Once we have a valid date, what can we do?\n  }\n\n  if (form) {\n    form.addEventListener('submit', handleFormSubmit, false);\n    form.addEventListener('change', handleFormSubmit, false);\n  }\n}\n"]}